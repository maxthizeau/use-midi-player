{"version":3,"file":"index.js","sources":["../src/renderer/conversion.ts","../src/processor/logger.ts","../src/processor/SampleTable.ts","../../node_modules/midifile-ts/dist/index.js","../src/processor/insertSorted.ts","../src/processor/SynthEventHandler.ts","../src/processor/AmplitudeEnvelope.ts","../src/processor/LFO.ts","../src/processor/WavetableOscillator.ts","../src/processor/SynthProcessorCore.ts","../src/renderer/renderAudio.ts","../../node_modules/@ryohey/sf2parser/bin/index.js","../src/soundfont/sampleToSynthEvent.ts","../src/soundfont/loader.ts","../src/SynthEvent.ts"],"sourcesContent":["import { AudioData } from \"./message\"\n\nexport const audioDataToAudioBuffer = (audioData: AudioData): AudioBuffer => {\n  const audioBuffer = new AudioBuffer({\n    length: audioData.length,\n    sampleRate: audioData.sampleRate,\n    numberOfChannels: 2,\n  })\n  audioBuffer.copyToChannel(new Float32Array(audioData.leftData), 0)\n  audioBuffer.copyToChannel(new Float32Array(audioData.rightData), 1)\n  return audioBuffer\n}\n","export class Logger {\n  enabled = true\n\n  log(...args: any) {\n    if (this.enabled) {\n      console.log(...args)\n    }\n  }\n\n  warn(...args: any) {\n    if (this.enabled) {\n      console.warn(...args)\n    }\n  }\n\n  error(...args: any) {\n    if (this.enabled) {\n      console.error(...args)\n    }\n  }\n}\n\nexport const logger = new Logger()\nlogger.enabled = false\n","import { SampleData } from \"../SynthEvent\"\n\ntype Sample = SampleData<Float32Array>\n\nexport type SampleTableItem = Sample & {\n  velRange: [number, number]\n}\n\nexport class SampleTable {\n  private samples: {\n    [bank: number]: {\n      [instrument: number]: { [pitch: number]: SampleTableItem[] }\n    }\n  } = {}\n\n  addSample(\n    sample: Sample,\n    bank: number,\n    instrument: number,\n    keyRange: [number, number],\n    velRange: [number, number]\n  ) {\n    for (let i = keyRange[0]; i <= keyRange[1]; i++) {\n      if (this.samples[bank] === undefined) {\n        this.samples[bank] = {}\n      }\n      if (this.samples[bank][instrument] === undefined) {\n        this.samples[bank][instrument] = {}\n      }\n      if (this.samples[bank][instrument][i] === undefined) {\n        this.samples[bank][instrument][i] = []\n      }\n      this.samples[bank][instrument][i].push({ ...sample, velRange })\n    }\n  }\n\n  getSamples(\n    bank: number,\n    instrument: number,\n    pitch: number,\n    velocity: number\n  ): Sample[] {\n    const samples = this.samples?.[bank]?.[instrument]?.[pitch]\n    return (\n      samples?.filter(\n        (s) => velocity >= s.velRange[0] && velocity <= s.velRange[1]\n      ) ?? []\n    )\n  }\n}\n","var MIDIChannelEvents = {\n    noteOff: 0x08,\n    noteOn: 0x09,\n    noteAftertouch: 0x0a,\n    controller: 0x0b,\n    programChange: 0x0c,\n    channelAftertouch: 0x0d,\n    pitchBend: 0x0e,\n};\n\nvar MIDIControlEventNames = [\n    \"Bank Select\",\n    \"Modulation\",\n    \"Breath Controller\",\n    \"Undefined\",\n    \"Foot Pedal\",\n    \"Portamento Time\",\n    \"Data Entry\",\n    \"Volume\",\n    \"Undefined\",\n    \"Balance\",\n    \"Pan\",\n    \"Expression\",\n    \"Effect Control 1\",\n    \"Effect Control 2\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Ribbon Controller or General Purpose Slider 1\",\n    \"Knob 1 or General Purpose Slider 2\",\n    \"General Purpose Slider 3\",\n    \"Knob 2 or General Purpose Slider 4\",\n    \"Knob 3 or Undefined\",\n    \"Knob 4 or Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Bank Select\",\n    \"Modulation Wheel\",\n    \"Breath controller\",\n    \"Undefined\",\n    \"Foot Pedal\",\n    \"Portamento Time\",\n    \"Data Entry\",\n    \"Volume\",\n    \"Balance\",\n    \"Undefined\",\n    \"Pan position\",\n    \"Expression\",\n    \"Effect Control 1\",\n    \"Effect Control 2\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Hold Pedal\",\n    \"Portamento\",\n    \"Sustenuto Pedal\",\n    \"Soft Pedal\",\n    \"Legato Pedal\",\n    \"Hold 2 Pedal\",\n    \"Sound Variation\",\n    \"Resonance\",\n    \"Sound Release Time\",\n    \"Sound Attack Time\",\n    \"Frequency Cutoff\",\n    \"Sound Control 6\",\n    \"Sound Control 7\",\n    \"Sound Control 8\",\n    \"Sound Control 9\",\n    \"Sound Control 10\",\n    \"Decay\",\n    \"High Pass Filter Frequency\",\n    \"General Purpose Button 3\",\n    \"General Purpose Button 4\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Reverb Level\",\n    \"Tremolo Level\",\n    \"Chorus Level\",\n    \"Detune\",\n    \"Phaser Level\",\n    \"Data Button Increment\",\n    \"Data Button Decrement\",\n    \"NRPN (LSB)\",\n    \"NRPN (MSB)\",\n    \"RPN (LSB)\",\n    \"RPN (MSB)\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"Undefined\",\n    \"All Sound Off\",\n    \"All Controllers Off\",\n    \"Local Keyboard\",\n    \"All Notes Off\",\n    \"Omni Mode Off\",\n    \"Omni Mode On\",\n    \"Mono Operation\",\n    \"Poly Operation\", // CC127\n];\n\nvar MIDIControlEvents = {\n    MSB_BANK: 0x00,\n    MSB_MODWHEEL: 0x01,\n    MSB_BREATH: 0x02,\n    MSB_FOOT: 0x04,\n    MSB_PORTAMENTO_TIME: 0x05,\n    MSB_DATA_ENTRY: 0x06,\n    MSB_MAIN_VOLUME: 0x07,\n    MSB_BALANCE: 0x08,\n    MSB_PAN: 0x0a,\n    MSB_EXPRESSION: 0x0b,\n    MSB_EFFECT1: 0x0c,\n    MSB_EFFECT2: 0x0d,\n    MSB_GENERAL_PURPOSE1: 0x10,\n    MSB_GENERAL_PURPOSE2: 0x11,\n    MSB_GENERAL_PURPOSE3: 0x12,\n    MSB_GENERAL_PURPOSE4: 0x13,\n    LSB_BANK: 0x20,\n    LSB_MODWHEEL: 0x21,\n    LSB_BREATH: 0x22,\n    LSB_FOOT: 0x24,\n    LSB_PORTAMENTO_TIME: 0x25,\n    LSB_DATA_ENTRY: 0x26,\n    LSB_MAIN_VOLUME: 0x27,\n    LSB_BALANCE: 0x28,\n    LSB_PAN: 0x2a,\n    LSB_EXPRESSION: 0x2b,\n    LSB_EFFECT1: 0x2c,\n    LSB_EFFECT2: 0x2d,\n    LSB_GENERAL_PURPOSE1: 0x30,\n    LSB_GENERAL_PURPOSE2: 0x31,\n    LSB_GENERAL_PURPOSE3: 0x32,\n    LSB_GENERAL_PURPOSE4: 0x33,\n    SUSTAIN: 0x40,\n    PORTAMENTO: 0x41,\n    SOSTENUTO: 0x42,\n    SUSTENUTO: 0x42,\n    SOFT_PEDAL: 0x43,\n    LEGATO_FOOTSWITCH: 0x44,\n    HOLD2: 0x45,\n    SC1_SOUND_VARIATION: 0x46,\n    SC2_TIMBRE: 0x47,\n    SC3_RELEASE_TIME: 0x48,\n    SC4_ATTACK_TIME: 0x49,\n    SC5_BRIGHTNESS: 0x4a,\n    SC6: 0x4b,\n    SC7: 0x4c,\n    SC8: 0x4d,\n    SC9: 0x4e,\n    SC10: 0x4f,\n    GENERAL_PURPOSE5: 0x50,\n    GENERAL_PURPOSE6: 0x51,\n    GENERAL_PURPOSE7: 0x52,\n    GENERAL_PURPOSE8: 0x53,\n    PORTAMENTO_CONTROL: 0x54,\n    E1_REVERB_DEPTH: 0x5b,\n    E2_TREMOLO_DEPTH: 0x5c,\n    E3_CHORUS_DEPTH: 0x5d,\n    E4_DETUNE_DEPTH: 0x5e,\n    E5_PHASER_DEPTH: 0x5f,\n    DATA_INCREMENT: 0x60,\n    DATA_DECREMENT: 0x61,\n    NONREG_PARM_NUM_LSB: 0x62,\n    NONREG_PARM_NUM_MSB: 0x63,\n    REGIST_PARM_NUM_LSB: 0x64,\n    REGIST_PARM_NUM_MSB: 0x65,\n    ALL_SOUNDS_OFF: 0x78,\n    RESET_CONTROLLERS: 0x79,\n    LOCAL_CONTROL_SWITCH: 0x7a,\n    ALL_NOTES_OFF: 0x7b,\n    OMNI_OFF: 0x7c,\n    OMNI_ON: 0x7d,\n    MONO1: 0x7e,\n    MONO2: 0x7f,\n};\n\nvar MIDIMetaEventNames = {\n    0x00: \"sequenceNumber\",\n    0x01: \"text\",\n    0x02: \"copyrightNotice\",\n    0x03: \"trackName\",\n    0x04: \"instrumentName\",\n    0x05: \"lyrics\",\n    0x06: \"marker\",\n    0x07: \"cuePoint\",\n    0x20: \"midiChannelPrefix\",\n    0x21: \"portPrefix\",\n    0x2f: \"endOfTrack\",\n    0x51: \"setTempo\",\n    0x54: \"smpteOffset\",\n    0x58: \"timeSignature\",\n    0x59: \"keySignature\",\n    0x7f: \"sequencerSpecific\",\n};\n\nvar MIDIMetaEvents = {\n    sequenceNumber: 0x00,\n    text: 0x01,\n    copyrightNotice: 0x02,\n    trackName: 0x03,\n    instrumentName: 0x04,\n    lyrics: 0x05,\n    marker: 0x06,\n    cuePoint: 0x07,\n    midiChannelPrefix: 0x20,\n    portPrefix: 0x21,\n    endOfTrack: 0x2f,\n    setTempo: 0x51,\n    smpteOffset: 0x54,\n    timeSignature: 0x58,\n    keySignature: 0x59,\n    sequencerSpecific: 0x7f,\n};\n\nfunction deserialize(stream, lastEventTypeByte, setLastEventTypeByte) {\n    if (lastEventTypeByte === void 0) { lastEventTypeByte = 0; }\n    var deltaTime = stream.readVarInt();\n    return deserializeSingleEvent(stream, deltaTime, lastEventTypeByte, setLastEventTypeByte);\n}\nfunction deserializeSingleEvent(stream, deltaTime, lastEventTypeByte, setLastEventTypeByte) {\n    if (deltaTime === void 0) { deltaTime = 0; }\n    if (lastEventTypeByte === void 0) { lastEventTypeByte = 0; }\n    var eventTypeByte = stream.readInt8();\n    if ((eventTypeByte & 0xf0) === 0xf0) {\n        /* system / meta event */\n        if (eventTypeByte === 0xff) {\n            /* meta event */\n            var type = \"meta\";\n            var subtypeByte = stream.readInt8();\n            var length = stream.readVarInt();\n            switch (subtypeByte) {\n                case MIDIMetaEvents.sequenceNumber:\n                    if (length !== 2)\n                        throw new Error(\"Expected length for sequenceNumber event is 2, got \" + length);\n                    return {\n                        deltaTime: deltaTime,\n                        type: type,\n                        subtype: \"sequenceNumber\",\n                        number: stream.readInt16(),\n                    };\n                case MIDIMetaEvents.text:\n                    return {\n                        deltaTime: deltaTime,\n                        type: type,\n                        subtype: \"text\",\n                        text: stream.readStr(length),\n                    };\n                case MIDIMetaEvents.copyrightNotice:\n                    return {\n                        deltaTime: deltaTime,\n                        type: type,\n                        subtype: \"copyrightNotice\",\n                        text: stream.readStr(length),\n                    };\n                case MIDIMetaEvents.trackName:\n                    return {\n                        deltaTime: deltaTime,\n                        type: type,\n                        subtype: \"trackName\",\n                        text: stream.readStr(length),\n                    };\n                case MIDIMetaEvents.instrumentName:\n                    return {\n                        deltaTime: deltaTime,\n                        type: type,\n                        subtype: \"instrumentName\",\n                        text: stream.readStr(length),\n                    };\n                case MIDIMetaEvents.lyrics:\n                    return {\n                        deltaTime: deltaTime,\n                        type: type,\n                        subtype: \"lyrics\",\n                        text: stream.readStr(length),\n                    };\n                case MIDIMetaEvents.marker:\n                    return {\n                        deltaTime: deltaTime,\n                        type: type,\n                        subtype: \"marker\",\n                        text: stream.readStr(length),\n                    };\n                case MIDIMetaEvents.cuePoint:\n                    return {\n                        deltaTime: deltaTime,\n                        type: type,\n                        subtype: \"cuePoint\",\n                        text: stream.readStr(length),\n                    };\n                case MIDIMetaEvents.midiChannelPrefix:\n                    if (length !== 1)\n                        throw new Error(\"Expected length for midiChannelPrefix event is 1, got \" + length);\n                    return {\n                        deltaTime: deltaTime,\n                        type: type,\n                        subtype: \"midiChannelPrefix\",\n                        value: stream.readInt8(),\n                    };\n                case MIDIMetaEvents.portPrefix:\n                    if (length !== 1)\n                        throw new Error(\"Expected length for midiChannelPrefix event is 1, got \" + length);\n                    return {\n                        deltaTime: deltaTime,\n                        type: type,\n                        subtype: \"portPrefix\",\n                        port: stream.readInt8(),\n                    };\n                case MIDIMetaEvents.endOfTrack:\n                    if (length !== 0)\n                        throw new Error(\"Expected length for endOfTrack event is 0, got \" + length);\n                    return {\n                        deltaTime: deltaTime,\n                        type: type,\n                        subtype: \"endOfTrack\",\n                    };\n                case MIDIMetaEvents.setTempo:\n                    if (length !== 3)\n                        throw new Error(\"Expected length for setTempo event is 3, got \" + length);\n                    return {\n                        deltaTime: deltaTime,\n                        type: type,\n                        subtype: \"setTempo\",\n                        microsecondsPerBeat: (stream.readInt8() << 16) +\n                            (stream.readInt8() << 8) +\n                            stream.readInt8(),\n                    };\n                case MIDIMetaEvents.smpteOffset: {\n                    if (length !== 5)\n                        throw new Error(\"Expected length for smpteOffset event is 5, got \" + length);\n                    var hourByte = stream.readInt8();\n                    var table = {\n                        0x00: 24,\n                        0x20: 25,\n                        0x40: 29,\n                        0x60: 30,\n                    };\n                    return {\n                        deltaTime: deltaTime,\n                        type: type,\n                        subtype: \"smpteOffset\",\n                        frameRate: table[hourByte & 0x60],\n                        hour: hourByte & 0x1f,\n                        min: stream.readInt8(),\n                        sec: stream.readInt8(),\n                        frame: stream.readInt8(),\n                        subframe: stream.readInt8(),\n                    };\n                }\n                case MIDIMetaEvents.timeSignature:\n                    if (length !== 4)\n                        throw new Error(\"Expected length for timeSignature event is 4, got \" + length);\n                    return {\n                        deltaTime: deltaTime,\n                        type: type,\n                        subtype: \"timeSignature\",\n                        numerator: stream.readInt8(),\n                        denominator: Math.pow(2, stream.readInt8()),\n                        metronome: stream.readInt8(),\n                        thirtyseconds: stream.readInt8(),\n                    };\n                case MIDIMetaEvents.keySignature:\n                    if (length !== 2)\n                        throw new Error(\"Expected length for keySignature event is 2, got \" + length);\n                    return {\n                        deltaTime: deltaTime,\n                        type: type,\n                        subtype: \"keySignature\",\n                        key: stream.readInt8(true),\n                        scale: stream.readInt8(),\n                    };\n                case MIDIMetaEvents.sequencerSpecific:\n                    return {\n                        deltaTime: deltaTime,\n                        type: type,\n                        subtype: \"sequencerSpecific\",\n                        data: stream.read(length),\n                    };\n                default:\n                    return {\n                        deltaTime: deltaTime,\n                        type: type,\n                        subtype: \"unknown\",\n                        data: stream.read(length),\n                    };\n            }\n        }\n        else if (eventTypeByte === 0xf0) {\n            var length = stream.readVarInt();\n            return {\n                deltaTime: deltaTime,\n                type: \"sysEx\",\n                data: stream.read(length),\n            };\n        }\n        else if (eventTypeByte === 0xf7) {\n            var length = stream.readVarInt();\n            return {\n                deltaTime: deltaTime,\n                type: \"dividedSysEx\",\n                data: stream.read(length),\n            };\n        }\n        else {\n            throw new Error(\"Unrecognised MIDI event type byte: \" + eventTypeByte);\n        }\n    }\n    else {\n        /* channel event */\n        var param1 = void 0;\n        if ((eventTypeByte & 0x80) === 0) {\n            /* running status - reuse lastEventTypeByte as the event type.\n              eventTypeByte is actually the first parameter\n            */\n            param1 = eventTypeByte;\n            eventTypeByte = lastEventTypeByte;\n        }\n        else {\n            param1 = stream.readInt8();\n            setLastEventTypeByte === null || setLastEventTypeByte === void 0 ? void 0 : setLastEventTypeByte(eventTypeByte);\n        }\n        var eventType = eventTypeByte >> 4;\n        var channel = eventTypeByte & 0x0f;\n        var type = \"channel\";\n        switch (eventType) {\n            case MIDIChannelEvents.noteOff:\n                return {\n                    deltaTime: deltaTime,\n                    type: type,\n                    channel: channel,\n                    subtype: \"noteOff\",\n                    noteNumber: param1,\n                    velocity: stream.readInt8(),\n                };\n            case MIDIChannelEvents.noteOn: {\n                var velocity = stream.readInt8();\n                return {\n                    deltaTime: deltaTime,\n                    type: type,\n                    channel: channel,\n                    subtype: velocity === 0 ? \"noteOff\" : \"noteOn\",\n                    noteNumber: param1,\n                    velocity: velocity,\n                };\n            }\n            case MIDIChannelEvents.noteAftertouch:\n                return {\n                    deltaTime: deltaTime,\n                    type: type,\n                    channel: channel,\n                    subtype: \"noteAftertouch\",\n                    noteNumber: param1,\n                    amount: stream.readInt8(),\n                };\n            case MIDIChannelEvents.controller:\n                return {\n                    deltaTime: deltaTime,\n                    type: type,\n                    channel: channel,\n                    subtype: \"controller\",\n                    controllerType: param1,\n                    value: stream.readInt8(),\n                };\n            case MIDIChannelEvents.programChange:\n                return {\n                    deltaTime: deltaTime,\n                    type: type,\n                    channel: channel,\n                    subtype: \"programChange\",\n                    value: param1,\n                };\n            case MIDIChannelEvents.channelAftertouch:\n                return {\n                    deltaTime: deltaTime,\n                    type: type,\n                    channel: channel,\n                    subtype: \"channelAftertouch\",\n                    amount: param1,\n                };\n            case MIDIChannelEvents.pitchBend:\n                return {\n                    deltaTime: deltaTime,\n                    type: type,\n                    channel: channel,\n                    subtype: \"pitchBend\",\n                    value: param1 + (stream.readInt8() << 7),\n                };\n            default:\n                return {\n                    deltaTime: deltaTime,\n                    type: type,\n                    channel: channel,\n                    subtype: \"unknown\",\n                    data: stream.readInt8(),\n                };\n        }\n    }\n}\n\n/* Wrapper for accessing strings through sequential reads */\nvar Stream = /** @class */ (function () {\n    function Stream(buf) {\n        this.position = 0;\n        if (buf instanceof DataView) {\n            this.buf = buf;\n        }\n        else if (buf instanceof ArrayBuffer) {\n            this.buf = new DataView(buf);\n        }\n        else if (buf instanceof Array) {\n            this.buf = new DataView(new Uint8Array(buf).buffer);\n        }\n        else if (buf instanceof Uint8Array) {\n            this.buf = new DataView(buf.buffer);\n        }\n        else {\n            throw new Error(\"not supported type: \" + typeof buf);\n        }\n    }\n    Stream.prototype.readByte = function () {\n        return this.buf.getUint8(this.position++);\n    };\n    Stream.prototype.readStr = function (length) {\n        return this.read(length)\n            .map(function (e) { return String.fromCharCode(e); })\n            .join(\"\");\n    };\n    Stream.prototype.read = function (length) {\n        var result = [];\n        for (var index = 0; index < length; index++) {\n            result.push(this.readByte());\n        }\n        return result;\n    };\n    /* read a big-endian 32-bit integer */\n    Stream.prototype.readInt32 = function () {\n        var result = this.buf.getInt32(this.position, false);\n        this.position += 4;\n        return result;\n    };\n    /* read a big-endian 16-bit integer */\n    Stream.prototype.readInt16 = function () {\n        var result = this.buf.getInt16(this.position, false);\n        this.position += 2;\n        return result;\n    };\n    /* read an 8-bit integer */\n    Stream.prototype.readInt8 = function (signed) {\n        if (signed === void 0) { signed = false; }\n        if (signed) {\n            return this.buf.getInt8(this.position++);\n        }\n        else {\n            return this.readByte();\n        }\n    };\n    Stream.prototype.eof = function () {\n        return this.position >= this.buf.byteLength;\n    };\n    /* read a MIDI-style variable-length integer\n      (big-endian value in groups of 7 bits,\n      with top bit set to signify that another byte follows)\n    */\n    Stream.prototype.readVarInt = function () {\n        var result = 0;\n        for (;;) {\n            var b = this.readInt8();\n            if (b & 0x80) {\n                result += b & 0x7f;\n                result <<= 7;\n            }\n            else {\n                /* b is the last byte */\n                return result + b;\n            }\n        }\n    };\n    return Stream;\n}());\n\n/*\nclass to parse the .mid file format\n(depends on stream.js)\n*/\nfunction read(data) {\n    function readChunk(stream) {\n        var id = stream.readStr(4);\n        var length = stream.readInt32();\n        return {\n            id: id,\n            length: length,\n            data: stream.read(length),\n        };\n    }\n    var stream = new Stream(data);\n    var headerChunk = readChunk(stream);\n    if (headerChunk.id !== \"MThd\" || headerChunk.length !== 6) {\n        throw new Error(\"Bad .mid file - header not found\");\n    }\n    var headerStream = new Stream(headerChunk.data);\n    var formatType = headerStream.readInt16();\n    var trackCount = headerStream.readInt16();\n    var timeDivision = headerStream.readInt16();\n    var ticksPerBeat;\n    if (timeDivision & 0x8000) {\n        throw new Error(\"Expressing time division in SMTPE frames is not supported yet\");\n    }\n    else {\n        ticksPerBeat = timeDivision;\n    }\n    var header = {\n        formatType: formatType,\n        trackCount: trackCount,\n        ticksPerBeat: ticksPerBeat,\n    };\n    var lastEventTypeByte;\n    function readEvent(stream) {\n        return deserialize(stream, lastEventTypeByte, function (byte) { return (lastEventTypeByte = byte); });\n    }\n    var tracks = [];\n    for (var i = 0; i < header.trackCount; i++) {\n        tracks[i] = [];\n        var trackChunk = readChunk(stream);\n        if (trackChunk.id !== \"MTrk\") {\n            throw new Error(\"Unexpected chunk - expected MTrk, got \" + trackChunk.id);\n        }\n        var trackStream = new Stream(trackChunk.data);\n        while (!trackStream.eof()) {\n            var event = readEvent(trackStream);\n            tracks[i].push(event);\n        }\n    }\n    return {\n        header: header,\n        tracks: tracks,\n    };\n}\n\nfunction toCharCodes(str) {\n    var bytes = [];\n    for (var i = 0; i < str.length; i++) {\n        bytes.push(str.charCodeAt(i));\n    }\n    return bytes;\n}\n\n// variable-length quantity\nfunction toVLQ(intNum) {\n    var v = intNum;\n    var r = [v & 0x7f];\n    while (true) {\n        v >>= 7;\n        if (v === 0) {\n            break;\n        }\n        r.unshift(0x80 + (v & 0x7f));\n    }\n    return r;\n}\n\nfunction serialize(e, includeDeltaTime) {\n    if (includeDeltaTime === void 0) { includeDeltaTime = true; }\n    var bytes = [];\n    function add(data) {\n        if (Array.isArray(data)) {\n            data.forEach(add);\n        }\n        else {\n            if (!Number.isInteger(data)) {\n                throw new Error(\"\\\"\".concat(data, \"\\\" is not integer\"));\n            }\n            bytes.push(data);\n        }\n    }\n    if (includeDeltaTime) {\n        add(toVLQ(e.deltaTime));\n    }\n    function addNumbers(list) {\n        add(list.length);\n        list.forEach(function (v) { return add(v); });\n    }\n    function addText(text) {\n        add(text.length);\n        add(toCharCodes(text));\n    }\n    switch (e.type) {\n        case \"meta\": {\n            var subtypeCode = MIDIMetaEvents[e.subtype];\n            if (subtypeCode === undefined) {\n                return [];\n            }\n            add(0xff); // type\n            add(subtypeCode); // subtype\n            switch (e.subtype) {\n                case \"sequenceNumber\":\n                    add(e.number);\n                    break;\n                case \"text\":\n                    addText(e.text);\n                    break;\n                case \"copyrightNotice\":\n                    addText(e.text);\n                    break;\n                case \"trackName\":\n                    addText(e.text);\n                    break;\n                case \"instrumentName\":\n                    addText(e.text);\n                    break;\n                case \"lyrics\":\n                    addText(e.text);\n                    break;\n                case \"marker\":\n                    addText(e.text);\n                    break;\n                case \"cuePoint\":\n                    addText(e.text);\n                    break;\n                case \"midiChannelPrefix\":\n                    addNumbers([e.value]);\n                    break;\n                case \"portPrefix\":\n                    addNumbers([e.port]);\n                    break;\n                case \"endOfTrack\":\n                    add(0);\n                    break;\n                case \"setTempo\": {\n                    var t = e.microsecondsPerBeat;\n                    addNumbers([(t >> 16) & 0xff, (t >> 8) & 0xff, t & 0xff]);\n                    break;\n                }\n                case \"smpteOffset\": {\n                    var frameRateByte = {\n                        24: 0x00,\n                        25: 0x20,\n                        29: 0x40,\n                        30: 0x60,\n                    };\n                    addNumbers([\n                        frameRateByte[e.frameRate] + (0x1f & e.hour),\n                        e.min,\n                        e.sec,\n                        e.frame,\n                        e.subframe,\n                    ]);\n                    break;\n                }\n                case \"timeSignature\": {\n                    addNumbers([\n                        e.numerator,\n                        Math.log2(e.denominator),\n                        e.metronome,\n                        e.thirtyseconds,\n                    ]);\n                    break;\n                }\n                case \"keySignature\": {\n                    addNumbers([e.key, e.scale]);\n                    break;\n                }\n                case \"sequencerSpecific\":\n                    addNumbers(e.data);\n                    break;\n                case \"unknown\":\n                    addNumbers(e.data);\n                    break;\n            }\n            break;\n        }\n        case \"sysEx\":\n            add(0xf0);\n            addNumbers(e.data);\n            break;\n        case \"dividedSysEx\":\n            add(0xf7);\n            addNumbers(e.data);\n            break;\n        case \"channel\": {\n            var subtypeCode = MIDIChannelEvents[e.subtype];\n            if (subtypeCode === undefined) {\n                return [];\n            }\n            add((subtypeCode << 4) + e.channel); // subtype + channel\n            switch (e.subtype) {\n                case \"noteOff\": {\n                    add(e.noteNumber);\n                    add(e.velocity);\n                    break;\n                }\n                case \"noteOn\": {\n                    add(e.noteNumber);\n                    add(e.velocity);\n                    break;\n                }\n                case \"noteAftertouch\": {\n                    add(e.noteNumber);\n                    add(e.amount);\n                    break;\n                }\n                case \"controller\": {\n                    add(e.controllerType);\n                    add(e.value);\n                    break;\n                }\n                case \"programChange\":\n                    add(e.value);\n                    break;\n                case \"channelAftertouch\":\n                    add(e.amount);\n                    break;\n                case \"pitchBend\": {\n                    add(e.value & 0x7f);\n                    add((e.value >> 7) & 0x7f);\n                    break;\n                }\n                case \"unknown\":\n                    add(e.data);\n                    break;\n            }\n            break;\n        }\n    }\n    return bytes;\n}\n\nvar Buffer = /** @class */ (function () {\n    function Buffer() {\n        this.data = [];\n        this.position = 0;\n    }\n    Object.defineProperty(Buffer.prototype, \"length\", {\n        get: function () {\n            return this.data.length;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Buffer.prototype.writeByte = function (v) {\n        this.data.push(v);\n        this.position++;\n    };\n    Buffer.prototype.writeStr = function (str) {\n        this.writeBytes(toCharCodes(str));\n    };\n    Buffer.prototype.writeInt32 = function (v) {\n        this.writeByte((v >> 24) & 0xff);\n        this.writeByte((v >> 16) & 0xff);\n        this.writeByte((v >> 8) & 0xff);\n        this.writeByte(v & 0xff);\n    };\n    Buffer.prototype.writeInt16 = function (v) {\n        this.writeByte((v >> 8) & 0xff);\n        this.writeByte(v & 0xff);\n    };\n    Buffer.prototype.writeBytes = function (arr) {\n        var _this = this;\n        arr.forEach(function (v) { return _this.writeByte(v); });\n    };\n    Buffer.prototype.writeChunk = function (id, func) {\n        this.writeStr(id);\n        var chunkBuf = new Buffer();\n        func(chunkBuf);\n        this.writeInt32(chunkBuf.length);\n        this.writeBytes(chunkBuf.data);\n    };\n    Buffer.prototype.toBytes = function () {\n        return new Uint8Array(this.data);\n    };\n    return Buffer;\n}());\n\n//https://sites.google.com/site/yyagisite/material/smfspec#format\nfunction write(tracks, ticksPerBeat) {\n    if (ticksPerBeat === void 0) { ticksPerBeat = 480; }\n    var buf = new Buffer();\n    // header chunk\n    buf.writeChunk(\"MThd\", function (it) {\n        it.writeInt16(1); // formatType\n        it.writeInt16(tracks.length); // trackCount\n        it.writeInt16(ticksPerBeat); // timeDivision\n    });\n    var _loop_1 = function (track) {\n        buf.writeChunk(\"MTrk\", function (it) {\n            for (var _i = 0, track_1 = track; _i < track_1.length; _i++) {\n                var event = track_1[_i];\n                it.writeBytes(serialize(event));\n            }\n        });\n    };\n    // track chunk\n    for (var _i = 0, tracks_1 = tracks; _i < tracks_1.length; _i++) {\n        var track = tracks_1[_i];\n        _loop_1(track);\n    }\n    return buf.toBytes();\n}\n\nexport { MIDIChannelEvents, MIDIControlEventNames, MIDIControlEvents, MIDIMetaEventNames, MIDIMetaEvents, Stream, deserialize, deserializeSingleEvent, read, serialize, write };\n//# sourceMappingURL=index.js.map\n","// https://gist.github.com/fmal/763d9c953c5a5f8b8f9099dbc58da55e\nexport function insertSorted<T>(arr: T[], item: T, prop: keyof T) {\n  let low = 0\n  let high = arr.length\n  let mid\n  while (low < high) {\n    mid = (low + high) >>> 1 // like (num / 2) but faster\n    if (arr[mid][prop] < item[prop]) {\n      low = mid + 1\n    } else {\n      high = mid\n    }\n  }\n  arr.splice(low, 0, item)\n}\n","import { ControllerEvent, MIDIControlEvents } from \"midifile-ts\"\nimport {\n  ImmediateEvent,\n  MIDIEvent,\n  MIDIEventBody,\n  SynthEvent,\n} from \"../SynthEvent\"\nimport { DistributiveOmit } from \"../types\"\nimport { insertSorted } from \"./insertSorted\"\nimport { logger } from \"./logger\"\nimport { SynthProcessorCore } from \"./SynthProcessorCore\"\n\ntype DelayedEvent = MIDIEvent & { scheduledFrame: number }\ntype RPNControllerEvent = DistributiveOmit<ControllerEvent, \"deltaTime\">\n\ninterface RPN {\n  rpnMSB?: RPNControllerEvent\n  rpnLSB?: RPNControllerEvent\n  dataMSB?: RPNControllerEvent\n  dataLSB?: RPNControllerEvent\n}\n\nexport class SynthEventHandler {\n  private processor: SynthProcessorCore\n  private scheduledEvents: DelayedEvent[] = []\n  private currentEvents: DelayedEvent[] = []\n  private rpnEvents: { [channel: number]: RPN | undefined } = {}\n  private bankSelectMSB: { [channel: number]: number | undefined } = {}\n\n  constructor(processor: SynthProcessorCore) {\n    this.processor = processor\n  }\n\n  private get currentFrame(): number {\n    return this.processor.currentFrame\n  }\n\n  addEvent(e: SynthEvent) {\n    logger.log(e)\n\n    if (\"delayTime\" in e) {\n      // handle in process\n      insertSorted(\n        this.scheduledEvents,\n        {\n          ...e,\n          scheduledFrame: this.currentFrame + e.delayTime,\n        },\n        \"scheduledFrame\"\n      )\n    } else {\n      this.handleImmediateEvent(e)\n    }\n  }\n\n  processScheduledEvents() {\n    if (this.scheduledEvents.length === 0) {\n      return\n    }\n\n    while (true) {\n      const e = this.scheduledEvents[0]\n      if (e === undefined || e.scheduledFrame > this.currentFrame) {\n        // scheduledEvents are sorted by scheduledFrame,\n        // so we can break early instead of iterating through all scheduledEvents,\n        break\n      }\n      this.scheduledEvents.shift()\n      this.currentEvents.push(e)\n    }\n\n    while (true) {\n      const e = this.currentEvents.pop()\n      if (e === undefined) {\n        break\n      }\n      this.handleDelayableEvent(e.midi)\n    }\n  }\n\n  handleImmediateEvent(e: ImmediateEvent) {\n    switch (e.type) {\n      case \"loadSample\":\n        this.processor.loadSample(\n          e.sample,\n          e.bank,\n          e.instrument,\n          e.keyRange,\n          e.velRange\n        )\n        break\n    }\n  }\n\n  handleDelayableEvent(e: MIDIEventBody) {\n    logger.log(\"handle delayable event\", e)\n\n    switch (e.type) {\n      case \"channel\": {\n        switch (e.subtype) {\n          case \"noteOn\":\n            this.processor.noteOn(e.channel, e.noteNumber, e.velocity)\n            break\n          case \"noteOff\":\n            this.processor.noteOff(e.channel, e.noteNumber)\n            break\n          case \"pitchBend\":\n            this.processor.pitchBend(e.channel, e.value)\n            break\n          case \"programChange\":\n            this.processor.programChange(e.channel, e.value)\n            break\n          case \"controller\": {\n            switch (e.controllerType) {\n              case MIDIControlEvents.NONREG_PARM_NUM_MSB:\n              case MIDIControlEvents.NONREG_PARM_NUM_LSB: // NRPN LSB\n                // Delete the rpn for do not send NRPN data events\n                delete this.rpnEvents[e.channel]\n                break\n              case MIDIControlEvents.REGIST_PARM_NUM_MSB: {\n                if (e.value === 127) {\n                  delete this.rpnEvents[e.channel]\n                } else {\n                  this.rpnEvents[e.channel] = {\n                    ...this.rpnEvents[e.channel],\n                    rpnMSB: e,\n                  }\n                }\n                break\n              }\n              case MIDIControlEvents.REGIST_PARM_NUM_LSB: {\n                if (e.value === 127) {\n                  delete this.rpnEvents[e.channel]\n                } else {\n                  this.rpnEvents[e.channel] = {\n                    ...this.rpnEvents[e.channel],\n                    rpnLSB: e,\n                  }\n                }\n                break\n              }\n              case MIDIControlEvents.MSB_DATA_ENTRY: {\n                const rpn = {\n                  ...this.rpnEvents[e.channel],\n                  dataMSB: e,\n                }\n                this.rpnEvents[e.channel] = rpn\n\n                // In case of pitch bend sensitivity,\n                // send without waiting for Data LSB event\n                if (rpn.rpnLSB?.value === 0) {\n                  this.processor.setPitchBendSensitivity(\n                    e.channel,\n                    rpn.dataMSB.value\n                  )\n                }\n                break\n              }\n              case MIDIControlEvents.LSB_DATA_ENTRY: {\n                this.rpnEvents[e.channel] = {\n                  ...this.rpnEvents[e.channel],\n                  dataLSB: e,\n                }\n                // TODO: Send other RPN events\n                break\n              }\n              case MIDIControlEvents.MSB_MAIN_VOLUME:\n                this.processor.setMainVolume(e.channel, e.value)\n                break\n              case MIDIControlEvents.MSB_EXPRESSION:\n                this.processor.expression(e.channel, e.value)\n                break\n              case MIDIControlEvents.ALL_SOUNDS_OFF:\n                this.removeScheduledEvents(e.channel)\n                this.processor.allSoundsOff(e.channel)\n                break\n              case MIDIControlEvents.ALL_NOTES_OFF:\n                this.processor.allNotesOff(e.channel)\n                break\n              case MIDIControlEvents.SUSTAIN:\n                this.processor.hold(e.channel, e.value)\n                break\n              case MIDIControlEvents.MSB_PAN:\n                this.processor.setPan(e.channel, e.value)\n                break\n              case MIDIControlEvents.MSB_MODWHEEL:\n                this.processor.modulation(e.channel, e.value)\n                break\n              case MIDIControlEvents.MSB_BANK:\n                this.bankSelectMSB[e.channel] = e.value\n                break\n              case MIDIControlEvents.LSB_BANK: {\n                const msb = this.bankSelectMSB[e.channel]\n                if (msb !== undefined) {\n                  const bank = (msb << 7) + e.value\n                  this.processor.bankSelect(e.channel, bank)\n                }\n                break\n              }\n              case MIDIControlEvents.RESET_CONTROLLERS:\n                this.processor.resetChannel(e.channel)\n                break\n            }\n            break\n          }\n        }\n        break\n      }\n    }\n  }\n\n  private removeScheduledEvents(channel: number) {\n    this.scheduledEvents = this.scheduledEvents.filter(\n      (e) => e.midi.channel !== channel\n    )\n    this.currentEvents = this.currentEvents.filter(\n      (e) => e.midi.channel !== channel\n    )\n  }\n}\n","export interface AmplitudeEnvelopeParameter {\n  attackTime: number\n  decayTime: number\n  sustainLevel: number\n  releaseTime: number\n}\n\nenum EnvelopePhase {\n  attack,\n  decay,\n  sustain,\n  release,\n  forceStop,\n  stopped,\n}\n\nconst forceStopReleaseTime = 0.1\n\nexport class AmplitudeEnvelope {\n  private readonly parameter: AmplitudeEnvelopeParameter\n  private phase = EnvelopePhase.attack\n  private lastAmplitude = 0\n  private readonly sampleRate: number\n\n  constructor(parameter: AmplitudeEnvelopeParameter, sampleRate: number) {\n    this.parameter = parameter\n    this.sampleRate = sampleRate\n  }\n\n  noteOn() {\n    this.phase = EnvelopePhase.attack\n  }\n\n  noteOff() {\n    if (this.phase !== EnvelopePhase.forceStop) {\n      this.phase = EnvelopePhase.release\n    }\n  }\n\n  // Rapidly decrease the volume. This method ignores release time parameter\n  forceStop() {\n    this.phase = EnvelopePhase.forceStop\n  }\n\n  getAmplitude(bufferSize: number): number {\n    const { attackTime, decayTime, sustainLevel, releaseTime } = this.parameter\n    const { sampleRate } = this\n\n    // Attack\n    switch (this.phase) {\n      case EnvelopePhase.attack: {\n        const amplificationPerFrame =\n          (1 / (attackTime * sampleRate)) * bufferSize\n        const value = this.lastAmplitude + amplificationPerFrame\n        if (value >= 1) {\n          this.phase = EnvelopePhase.decay\n          this.lastAmplitude = 1\n          return 1\n        }\n        this.lastAmplitude = value\n        return value\n      }\n      case EnvelopePhase.decay: {\n        const attenuationPerFrame = (1 / (decayTime * sampleRate)) * bufferSize\n        const value = this.lastAmplitude - attenuationPerFrame\n        if (value <= sustainLevel) {\n          if (sustainLevel <= 0) {\n            this.phase = EnvelopePhase.stopped\n            this.lastAmplitude = 0\n            return 0\n          } else {\n            this.phase = EnvelopePhase.sustain\n            this.lastAmplitude = sustainLevel\n            return sustainLevel\n          }\n        }\n        this.lastAmplitude = value\n        return value\n      }\n      case EnvelopePhase.sustain: {\n        return sustainLevel\n      }\n      case EnvelopePhase.release: {\n        const attenuationPerFrame =\n          (1 / (releaseTime * sampleRate)) * bufferSize\n        const value = this.lastAmplitude - attenuationPerFrame\n        if (value <= 0) {\n          this.phase = EnvelopePhase.stopped\n          this.lastAmplitude = 0\n          return 0\n        }\n        this.lastAmplitude = value\n        return value\n      }\n      case EnvelopePhase.forceStop: {\n        const attenuationPerFrame =\n          (1 / (forceStopReleaseTime * sampleRate)) * bufferSize\n        const value = this.lastAmplitude - attenuationPerFrame\n        if (value <= 0) {\n          this.phase = EnvelopePhase.stopped\n          this.lastAmplitude = 0\n          return 0\n        }\n        this.lastAmplitude = value\n        return value\n      }\n      case EnvelopePhase.stopped: {\n        return 0\n      }\n    }\n  }\n\n  get isPlaying() {\n    return this.phase !== EnvelopePhase.stopped\n  }\n}\n","export class LFO {\n  // Hz\n  frequency = 5\n  private phase = 0\n  private readonly sampleRate: number\n\n  constructor(sampleRate: number) {\n    this.sampleRate = sampleRate\n  }\n\n  getValue(bufferSize: number) {\n    const phase = this.phase\n    this.phase +=\n      ((Math.PI * 2 * this.frequency) / this.sampleRate) * bufferSize\n    return Math.sin(phase)\n  }\n}\n","import { SampleData } from \"../SynthEvent\"\nimport { AmplitudeEnvelope } from \"./AmplitudeEnvelope\"\nimport { LFO } from \"./LFO\"\n\nexport class WavetableOscillator {\n  readonly sample: SampleData<Float32Array>\n  private sampleIndex = 0\n  private _isPlaying = false\n  private _isNoteOff = false\n  private baseSpeed = 1\n  private readonly envelope: AmplitudeEnvelope\n  private readonly pitchLFO: LFO\n  private readonly sampleRate: number\n\n  speed = 1\n  // 0 to 1\n  private velocity = 1\n  // 0 to 1\n  volume = 1\n\n  modulation = 0\n\n  // cent\n  modulationDepthRange = 50\n\n  // -1 to 1\n  pan = 0\n\n  // This oscillator should be note off when hold pedal off\n  isHold = false\n\n  constructor(sample: SampleData<Float32Array>, sampleRate: number) {\n    this.sample = sample\n    this.sampleRate = sampleRate\n    this.envelope = new AmplitudeEnvelope(sample.amplitudeEnvelope, sampleRate)\n    this.pitchLFO = new LFO(sampleRate)\n  }\n\n  noteOn(pitch: number, velocity: number) {\n    this.velocity = velocity\n    this._isPlaying = true\n    this.sampleIndex = this.sample.sampleStart\n    this.baseSpeed = Math.pow(\n      2,\n      ((pitch - this.sample.pitch) / 12) * this.sample.scaleTuning\n    )\n    this.pitchLFO.frequency = 5\n    this.envelope.noteOn()\n  }\n\n  noteOff() {\n    this.envelope.noteOff()\n    this._isNoteOff = true\n  }\n\n  forceStop() {\n    this.envelope.forceStop()\n  }\n\n  process(outputs: Float32Array[]) {\n    if (!this._isPlaying) {\n      return\n    }\n\n    const speed =\n      (this.baseSpeed * this.speed * this.sample.sampleRate) / this.sampleRate\n    const volume = this.velocity * this.volume * this.sample.volume\n\n    // zero to pi/2\n    const panTheta =\n      ((Math.min(1, Math.max(-1, this.pan + this.sample.pan)) + 1) * Math.PI) /\n      4\n    const leftPanVolume = Math.cos(panTheta)\n    const rightPanVolume = Math.sin(panTheta)\n    const gain = this.envelope.getAmplitude(outputs[0].length)\n    const leftGain = gain * volume * leftPanVolume\n    const rightGain = gain * volume * rightPanVolume\n\n    const pitchLFOValue = this.pitchLFO.getValue(outputs[0].length)\n    const pitchModulation =\n      pitchLFOValue * this.modulation * (this.modulationDepthRange / 1200)\n    const modulatedSpeed = speed * (1 + pitchModulation)\n\n    for (let i = 0; i < outputs[0].length; ++i) {\n      const index = Math.floor(this.sampleIndex)\n      const advancedIndex = this.sampleIndex + modulatedSpeed\n      let loopIndex: number | null = null\n\n      if (this.sample.loop !== null && advancedIndex >= this.sample.loop.end) {\n        loopIndex =\n          this.sample.loop.start + (advancedIndex - Math.floor(advancedIndex))\n      }\n\n      const nextIndex =\n        loopIndex !== null\n          ? Math.floor(loopIndex)\n          : Math.min(index + 1, this.sample.sampleEnd - 1)\n\n      // linear interpolation\n      const current = this.sample.buffer[index]\n      const next = this.sample.buffer[nextIndex]\n      const level = current + (next - current) * (this.sampleIndex - index)\n\n      outputs[0][i] += level * leftGain\n      outputs[1][i] += level * rightGain\n\n      this.sampleIndex = loopIndex ?? advancedIndex\n\n      if (this.sampleIndex >= this.sample.sampleEnd) {\n        this._isPlaying = false\n        break\n      }\n    }\n  }\n\n  get isPlaying() {\n    return this._isPlaying && this.envelope.isPlaying\n  }\n\n  get isNoteOff() {\n    return this._isNoteOff\n  }\n\n  get exclusiveClass() {\n    return this.sample.exclusiveClass\n  }\n}\n","import { SampleData, SynthEvent } from \"../SynthEvent\"\nimport { logger } from \"./logger\"\nimport { SampleTable } from \"./SampleTable\"\nimport { SynthEventHandler } from \"./SynthEventHandler\"\nimport { WavetableOscillator } from \"./WavetableOscillator\"\n\ninterface ChannelState {\n  volume: number // 0 to 1\n  bank: number\n  instrument: number\n  pitchBend: number // in semitone\n  pitchBendSensitivity: number // in semitone\n  expression: number // 0 to 1\n  pan: number // -1 to 1\n  modulation: number\n  oscillators: { [key: number]: WavetableOscillator[] }\n  hold: boolean\n}\n\nconst initialChannelState = (): ChannelState => ({\n  volume: 1,\n  bank: 0,\n  instrument: 0,\n  pitchBend: 0,\n  pitchBendSensitivity: 2,\n  oscillators: {},\n  expression: 1,\n  pan: 0,\n  modulation: 0,\n  hold: false,\n})\n\nconst RHYTHM_CHANNEL = 9\nconst RHYTHM_BANK = 128\n\ntype Sample = SampleData<Float32Array>\n\nexport class SynthProcessorCore {\n  private sampleTable = new SampleTable()\n  private channels: { [key: number]: ChannelState } = {}\n  private readonly eventHandler: SynthEventHandler\n  private readonly sampleRate: number\n  private readonly getCurrentFrame: () => number\n\n  constructor(sampleRate: number, getCurrentFrame: () => number) {\n    this.eventHandler = new SynthEventHandler(this)\n    this.sampleRate = sampleRate\n    this.getCurrentFrame = getCurrentFrame\n  }\n\n  get currentFrame(): number {\n    return this.getCurrentFrame()\n  }\n\n  private getSamples(\n    channel: number,\n    pitch: number,\n    velocity: number\n  ): Sample[] {\n    const state = this.getChannelState(channel)\n    // Play drums for CH.10\n    const bank = channel === RHYTHM_CHANNEL ? RHYTHM_BANK : state.bank\n    return this.sampleTable.getSamples(bank, state.instrument, pitch, velocity)\n  }\n\n  loadSample(\n    sample: SampleData<ArrayBuffer>,\n    bank: number,\n    instrument: number,\n    keyRange: [number, number],\n    velRange: [number, number]\n  ) {\n    const _sample: Sample = {\n      ...sample,\n      buffer: new Float32Array(sample.buffer),\n    }\n    this.sampleTable.addSample(_sample, bank, instrument, keyRange, velRange)\n  }\n\n  addEvent(e: SynthEvent) {\n    this.eventHandler.addEvent(e)\n  }\n\n  noteOn(channel: number, pitch: number, velocity: number) {\n    const state = this.getChannelState(channel)\n\n    const samples = this.getSamples(channel, pitch, velocity)\n\n    if (samples.length === 0) {\n      logger.warn(\n        `There is no sample for noteNumber ${pitch} in instrument ${state.instrument} in bank ${state.bank}`\n      )\n      return\n    }\n\n    for (const sample of samples) {\n      const oscillator = new WavetableOscillator(sample, this.sampleRate)\n\n      const volume = velocity / 0x80\n      oscillator.noteOn(pitch, volume)\n\n      if (state.oscillators[pitch] === undefined) {\n        state.oscillators[pitch] = []\n      }\n\n      if (sample.exclusiveClass !== undefined) {\n        for (const key in state.oscillators) {\n          for (const osc of state.oscillators[key]) {\n            if (osc.exclusiveClass === sample.exclusiveClass) {\n              osc.forceStop()\n            }\n          }\n        }\n      }\n\n      state.oscillators[pitch].push(oscillator)\n    }\n  }\n\n  noteOff(channel: number, pitch: number) {\n    const state = this.getChannelState(channel)\n\n    if (state.oscillators[pitch] === undefined) {\n      return\n    }\n\n    for (const osc of state.oscillators[pitch]) {\n      if (!osc.isNoteOff) {\n        if (state.hold) {\n          osc.isHold = true\n        } else {\n          osc.noteOff()\n        }\n      }\n    }\n  }\n\n  pitchBend(channel: number, value: number) {\n    const state = this.getChannelState(channel)\n    state.pitchBend = (value / 0x2000 - 1) * state.pitchBendSensitivity\n  }\n\n  programChange(channel: number, value: number) {\n    const state = this.getChannelState(channel)\n    state.instrument = value\n  }\n\n  setPitchBendSensitivity(channel: number, value: number) {\n    const state = this.getChannelState(channel)\n    state.pitchBendSensitivity = value\n  }\n\n  setMainVolume(channel: number, value: number) {\n    const state = this.getChannelState(channel)\n    state.volume = value / 0x80\n  }\n\n  expression(channel: number, value: number) {\n    const state = this.getChannelState(channel)\n    state.expression = value / 0x80\n  }\n\n  allSoundsOff(channel: number) {\n    const state = this.getChannelState(channel)\n\n    for (const key in state.oscillators) {\n      for (const osc of state.oscillators[key]) {\n        osc.forceStop()\n      }\n    }\n  }\n\n  allNotesOff(channel: number) {\n    const state = this.getChannelState(channel)\n\n    for (const key in state.oscillators) {\n      for (const osc of state.oscillators[key]) {\n        osc.noteOff()\n      }\n    }\n  }\n\n  hold(channel: number, value: number) {\n    const hold = value >= 64\n    const state = this.getChannelState(channel)\n    state.hold = hold\n\n    if (hold) {\n      return\n    }\n\n    for (const key in state.oscillators) {\n      for (const osc of state.oscillators[key]) {\n        if (osc.isHold) {\n          osc.noteOff()\n        }\n      }\n    }\n  }\n\n  setPan(channel: number, value: number) {\n    const state = this.getChannelState(channel)\n    state.pan = (value / 127 - 0.5) * 2\n  }\n\n  bankSelect(channel: number, value: number) {\n    const state = this.getChannelState(channel)\n    state.bank = value\n  }\n\n  modulation(channel: number, value: number) {\n    const state = this.getChannelState(channel)\n    state.modulation = value / 0x80\n  }\n\n  resetChannel(channel: number) {\n    delete this.channels[channel]\n  }\n\n  private getChannelState(channel: number): ChannelState {\n    const state = this.channels[channel]\n    if (state !== undefined) {\n      return state\n    }\n    const newState = initialChannelState()\n    this.channels[channel] = newState\n    return newState\n  }\n\n  process(outputs: Float32Array[]): void {\n    this.eventHandler.processScheduledEvents()\n\n    for (const channel in this.channels) {\n      const state = this.channels[channel]\n\n      for (let key in state.oscillators) {\n        state.oscillators[key] = state.oscillators[key].filter((oscillator) => {\n          oscillator.speed = Math.pow(2, state.pitchBend / 12)\n          oscillator.volume = state.volume * state.expression\n          oscillator.pan = state.pan\n          oscillator.modulation = state.modulation\n          oscillator.process([outputs[0], outputs[1]])\n\n          if (!oscillator.isPlaying) {\n            return false\n          }\n          return true\n        })\n      }\n    }\n\n    // master volume\n    const masterVolume = 0.3\n    for (let i = 0; i < outputs[0].length; ++i) {\n      outputs[0][i] *= masterVolume\n      outputs[1][i] *= masterVolume\n    }\n  }\n}\n","import { AudioData, LoadSampleEvent, SynthEvent } from \"..\"\nimport { SynthProcessorCore } from \"../processor/SynthProcessorCore\"\n\n// returns in frame unit\nconst getSongLength = (events: SynthEvent[]) =>\n  Math.max(...events.map((e) => (e.type === \"midi\" ? e.delayTime : 0)))\n\n// Maximum time to wait for the note release sound to become silent\nconst silentTimeoutSec = 5\n\nexport interface RenderAudioOptions {\n  sampleRate?: number\n  onProgress?: (numFrames: number, totalFrames: number) => void\n  cancel?: () => boolean\n  bufferSize?: number\n  waitForEventLoop?: () => Promise<void>\n}\n\nconst isArrayZero = <T>(arr: ArrayLike<T>) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] !== 0) {\n      return false\n    }\n  }\n  return true\n}\n\nexport const renderAudio = async (\n  samples: LoadSampleEvent[],\n  events: SynthEvent[],\n  options?: RenderAudioOptions\n): Promise<AudioData> => {\n  let currentFrame = 0\n  const sampleRate = options?.sampleRate ?? 44100\n  const bufSize = options?.bufferSize ?? 500\n\n  const synth = new SynthProcessorCore(sampleRate, () => currentFrame)\n\n  samples.forEach((e) => synth.addEvent(e))\n  events.forEach((e) => synth.addEvent(e))\n\n  const songLengthFrame = getSongLength(events)\n  const iterCount = Math.ceil(songLengthFrame / bufSize)\n  const additionalIterCount = Math.ceil(\n    (silentTimeoutSec * sampleRate) / bufSize\n  )\n  const allIterCount = iterCount + additionalIterCount\n  const audioBufferSize = allIterCount * bufSize\n\n  const leftData = new Float32Array(audioBufferSize)\n  const rightData = new Float32Array(audioBufferSize)\n\n  const buffer = [new Float32Array(bufSize), new Float32Array(bufSize)]\n\n  for (let i = 0; i < allIterCount; i++) {\n    buffer[0].fill(0)\n    buffer[1].fill(0)\n    synth.process(buffer)\n    const offset = i * bufSize\n    leftData.set(buffer[0], offset)\n    rightData.set(buffer[1], offset)\n    currentFrame += bufSize\n\n    // Wait for silence after playback is complete.\n    if (i > iterCount && isArrayZero(buffer[0]) && isArrayZero(buffer[1])) {\n      console.log(`early break ${i} in ${iterCount + additionalIterCount}`)\n      break\n    }\n\n    // give a chance to terminate the loop or update progress\n    if (i % 1000 === 0) {\n      await options?.waitForEventLoop?.()\n\n      options?.onProgress?.(offset, audioBufferSize)\n\n      if (options?.cancel?.()) {\n        throw new Error(\"renderAudio cancelled\")\n      }\n    }\n  }\n\n  // slice() to delete silent parts\n  const trimmedLeft = leftData.slice(0, currentFrame)\n  const trimmedRight = rightData.slice(0, currentFrame)\n\n  return {\n    length: trimmedLeft.length,\n    leftData: trimmedLeft.buffer,\n    rightData: trimmedRight.buffer,\n    sampleRate,\n  }\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nclass Stream {\r\n    constructor(data, offset) {\r\n        this.data = data;\r\n        this.ip = offset;\r\n    }\r\n    readString(size) {\r\n        const str = String.fromCharCode.apply(null, this.data.subarray(this.ip, (this.ip += size)));\r\n        const nullLocation = str.indexOf(\"\\u0000\");\r\n        if (nullLocation > 0) {\r\n            return str.substr(0, nullLocation);\r\n        }\r\n        return str;\r\n    }\r\n    readWORD() {\r\n        return this.data[this.ip++] | (this.data[this.ip++] << 8);\r\n    }\r\n    readDWORD(bigEndian = false) {\r\n        if (bigEndian) {\r\n            return (((this.data[this.ip++] << 24) |\r\n                (this.data[this.ip++] << 16) |\r\n                (this.data[this.ip++] << 8) |\r\n                this.data[this.ip++]) >>>\r\n                0);\r\n        }\r\n        else {\r\n            return ((this.data[this.ip++] |\r\n                (this.data[this.ip++] << 8) |\r\n                (this.data[this.ip++] << 16) |\r\n                (this.data[this.ip++] << 24)) >>>\r\n                0);\r\n        }\r\n    }\r\n    readByte() {\r\n        return this.data[this.ip++];\r\n    }\r\n    readAt(offset) {\r\n        return this.data[this.ip + offset];\r\n    }\r\n    /* helper */\r\n    readUInt8() {\r\n        return this.readByte();\r\n    }\r\n    readInt8() {\r\n        return (this.readByte() << 24) >> 24;\r\n    }\r\n    readUInt16() {\r\n        return this.readWORD();\r\n    }\r\n    readInt16() {\r\n        return (this.readWORD() << 16) >> 16;\r\n    }\r\n    readUInt32() {\r\n        return this.readDWORD();\r\n    }\r\n}\n\nfunction parseChunk$1(input, ip, bigEndian) {\r\n    const stream = new Stream(input, ip);\r\n    const type = stream.readString(4);\r\n    const size = stream.readDWORD(bigEndian);\r\n    return new Chunk(type, size, stream.ip);\r\n}\r\nfunction parseRiff(input, index = 0, length, { padding = true, bigEndian = false } = {}) {\r\n    const chunkList = [];\r\n    const end = length + index;\r\n    let ip = index;\r\n    while (ip < end) {\r\n        const chunk = parseChunk$1(input, ip, bigEndian);\r\n        ip = chunk.offset + chunk.size;\r\n        // padding\r\n        if (padding && ((ip - index) & 1) === 1) {\r\n            ip++;\r\n        }\r\n        chunkList.push(chunk);\r\n    }\r\n    return chunkList;\r\n}\r\nclass Chunk {\r\n    constructor(type, size, offset) {\r\n        this.type = type;\r\n        this.size = size;\r\n        this.offset = offset;\r\n    }\r\n}\n\nconst GeneratorEnumeratorTable = [\r\n    \"startAddrsOffset\",\r\n    \"endAddrsOffset\",\r\n    \"startloopAddrsOffset\",\r\n    \"endloopAddrsOffset\",\r\n    \"startAddrsCoarseOffset\",\r\n    \"modLfoToPitch\",\r\n    \"vibLfoToPitch\",\r\n    \"modEnvToPitch\",\r\n    \"initialFilterFc\",\r\n    \"initialFilterQ\",\r\n    \"modLfoToFilterFc\",\r\n    \"modEnvToFilterFc\",\r\n    \"endAddrsCoarseOffset\",\r\n    \"modLfoToVolume\",\r\n    undefined,\r\n    \"chorusEffectsSend\",\r\n    \"reverbEffectsSend\",\r\n    \"pan\",\r\n    undefined,\r\n    undefined,\r\n    undefined,\r\n    \"delayModLFO\",\r\n    \"freqModLFO\",\r\n    \"delayVibLFO\",\r\n    \"freqVibLFO\",\r\n    \"delayModEnv\",\r\n    \"attackModEnv\",\r\n    \"holdModEnv\",\r\n    \"decayModEnv\",\r\n    \"sustainModEnv\",\r\n    \"releaseModEnv\",\r\n    \"keynumToModEnvHold\",\r\n    \"keynumToModEnvDecay\",\r\n    \"delayVolEnv\",\r\n    \"attackVolEnv\",\r\n    \"holdVolEnv\",\r\n    \"decayVolEnv\",\r\n    \"sustainVolEnv\",\r\n    \"releaseVolEnv\",\r\n    \"keynumToVolEnvHold\",\r\n    \"keynumToVolEnvDecay\",\r\n    \"instrument\",\r\n    undefined,\r\n    \"keyRange\",\r\n    \"velRange\",\r\n    \"startloopAddrsCoarseOffset\",\r\n    \"keynum\",\r\n    \"velocity\",\r\n    \"initialAttenuation\",\r\n    undefined,\r\n    \"endloopAddrsCoarseOffset\",\r\n    \"coarseTune\",\r\n    \"fineTune\",\r\n    \"sampleID\",\r\n    \"sampleModes\",\r\n    undefined,\r\n    \"scaleTuning\",\r\n    \"exclusiveClass\",\r\n    \"overridingRootKey\",\r\n];\n\nclass VersionTag {\r\n    static parse(stream) {\r\n        const v = new VersionTag();\r\n        v.major = stream.readInt8();\r\n        v.minor = stream.readInt8();\r\n        return v;\r\n    }\r\n}\r\nclass Info {\r\n    // LIST - INFO の全ての chunk\r\n    static parse(data, chunks) {\r\n        function getChunk(type) {\r\n            return chunks.find((c) => c.type === type);\r\n        }\r\n        function toStream(chunk) {\r\n            return new Stream(data, chunk.offset);\r\n        }\r\n        function readString(type) {\r\n            const chunk = getChunk(type);\r\n            if (!chunk) {\r\n                return null;\r\n            }\r\n            return toStream(chunk).readString(chunk.size);\r\n        }\r\n        function readVersionTag(type) {\r\n            const chunk = getChunk(type);\r\n            if (!chunk) {\r\n                return null;\r\n            }\r\n            return VersionTag.parse(toStream(chunk));\r\n        }\r\n        const info = new Info();\r\n        info.comment = readString(\"ICMT\");\r\n        info.copyright = readString(\"ICOP\");\r\n        info.creationDate = readString(\"ICRD\");\r\n        info.engineer = readString(\"IENG\");\r\n        info.name = readString(\"INAM\");\r\n        info.product = readString(\"IPRD\");\r\n        info.software = readString(\"ISFT\");\r\n        info.version = readVersionTag(\"ifil\");\r\n        info.soundEngine = readString(\"isng\");\r\n        info.romName = readString(\"irom\");\r\n        info.romVersion = readVersionTag(\"iver\");\r\n        return info;\r\n    }\r\n}\r\nclass PresetHeader {\r\n    get isEnd() {\r\n        return this.presetName === \"EOP\";\r\n    }\r\n    static parse(stream) {\r\n        const p = new PresetHeader();\r\n        p.presetName = stream.readString(20);\r\n        p.preset = stream.readWORD();\r\n        p.bank = stream.readWORD();\r\n        p.presetBagIndex = stream.readWORD();\r\n        p.library = stream.readDWORD();\r\n        p.genre = stream.readDWORD();\r\n        p.morphology = stream.readDWORD();\r\n        return p;\r\n    }\r\n}\r\nclass PresetBag {\r\n    static parse(stream) {\r\n        const p = new PresetBag();\r\n        p.presetGeneratorIndex = stream.readWORD();\r\n        p.presetModulatorIndex = stream.readWORD();\r\n        return p;\r\n    }\r\n}\r\nclass RangeValue {\r\n    constructor(lo, hi) {\r\n        this.lo = lo;\r\n        this.hi = hi;\r\n    }\r\n    static parse(stream) {\r\n        return new RangeValue(stream.readByte(), stream.readByte());\r\n    }\r\n}\r\nclass ModulatorList {\r\n    get type() {\r\n        return GeneratorEnumeratorTable[this.destinationOper];\r\n    }\r\n    get isEnd() {\r\n        return (this.sourceOper === 0 &&\r\n            this.destinationOper === 0 &&\r\n            this.value === 0 &&\r\n            this.amountSourceOper === 0 &&\r\n            this.transOper === 0);\r\n    }\r\n    static parse(stream) {\r\n        const t = new ModulatorList();\r\n        t.sourceOper = stream.readWORD();\r\n        t.destinationOper = stream.readWORD();\r\n        switch (t.type) {\r\n            case \"keyRange\": /* FALLTHROUGH */\r\n            case \"velRange\": /* FALLTHROUGH */\r\n            case \"keynum\": /* FALLTHROUGH */\r\n            case \"velocity\":\r\n                t.value = RangeValue.parse(stream);\r\n                break;\r\n            default:\r\n                t.value = stream.readInt16();\r\n                break;\r\n        }\r\n        t.amountSourceOper = stream.readWORD();\r\n        t.transOper = stream.readWORD();\r\n        return t;\r\n    }\r\n}\r\nclass GeneratorList {\r\n    get type() {\r\n        return GeneratorEnumeratorTable[this.code];\r\n    }\r\n    get isEnd() {\r\n        return this.code === 0 && this.value === 0;\r\n    }\r\n    static parse(stream) {\r\n        const t = new GeneratorList();\r\n        t.code = stream.readWORD();\r\n        switch (t.type) {\r\n            case \"keynum\": /* FALLTHROUGH */\r\n            case \"keyRange\": /* FALLTHROUGH */\r\n            case \"velRange\": /* FALLTHROUGH */\r\n            case \"velocity\":\r\n                t.value = RangeValue.parse(stream);\r\n                break;\r\n            default:\r\n                t.value = stream.readInt16();\r\n                break;\r\n        }\r\n        return t;\r\n    }\r\n}\r\nclass Instrument {\r\n    get isEnd() {\r\n        return this.instrumentName === \"EOI\";\r\n    }\r\n    static parse(stream) {\r\n        const t = new Instrument();\r\n        t.instrumentName = stream.readString(20);\r\n        t.instrumentBagIndex = stream.readWORD();\r\n        return t;\r\n    }\r\n}\r\nclass InstrumentBag {\r\n    static parse(stream) {\r\n        const t = new InstrumentBag();\r\n        t.instrumentGeneratorIndex = stream.readWORD();\r\n        t.instrumentModulatorIndex = stream.readWORD();\r\n        return t;\r\n    }\r\n}\r\nclass SampleHeader {\r\n    get isEnd() {\r\n        return this.sampleName === \"EOS\";\r\n    }\r\n    static parse(stream) {\r\n        const s = new SampleHeader();\r\n        s.sampleName = stream.readString(20);\r\n        s.start = stream.readDWORD();\r\n        s.end = stream.readDWORD();\r\n        s.loopStart = stream.readDWORD();\r\n        s.loopEnd = stream.readDWORD();\r\n        s.sampleRate = stream.readDWORD();\r\n        s.originalPitch = stream.readByte();\r\n        s.pitchCorrection = stream.readInt8();\r\n        s.sampleLink = stream.readWORD();\r\n        s.sampleType = stream.readWORD();\r\n        s.loopStart -= s.start;\r\n        s.loopEnd -= s.start;\r\n        return s;\r\n    }\r\n}\n\nfunction parse(input, option = {}) {\r\n    // parse RIFF chunk\r\n    const chunkList = parseRiff(input, 0, input.length, option);\r\n    if (chunkList.length !== 1) {\r\n        throw new Error(\"wrong chunk length\");\r\n    }\r\n    const chunk = chunkList[0];\r\n    if (chunk === null) {\r\n        throw new Error(\"chunk not found\");\r\n    }\r\n    function parseRiffChunk(chunk, data) {\r\n        const chunkList = getChunkList(chunk, data, \"RIFF\", \"sfbk\");\r\n        if (chunkList.length !== 3) {\r\n            throw new Error(\"invalid sfbk structure\");\r\n        }\r\n        return Object.assign({ \r\n            // INFO-list\r\n            info: parseInfoList(chunkList[0], data), \r\n            // sdta-list\r\n            samplingData: parseSdtaList(chunkList[1], data) }, parsePdtaList(chunkList[2], data));\r\n    }\r\n    function parsePdtaList(chunk, data) {\r\n        const chunkList = getChunkList(chunk, data, \"LIST\", \"pdta\");\r\n        // check number of chunks\r\n        if (chunkList.length !== 9) {\r\n            throw new Error(\"invalid pdta chunk\");\r\n        }\r\n        return {\r\n            presetHeaders: parsePhdr(chunkList[0], data),\r\n            presetZone: parsePbag(chunkList[1], data),\r\n            presetModulators: parsePmod(chunkList[2], data),\r\n            presetGenerators: parsePgen(chunkList[3], data),\r\n            instruments: parseInst(chunkList[4], data),\r\n            instrumentZone: parseIbag(chunkList[5], data),\r\n            instrumentModulators: parseImod(chunkList[6], data),\r\n            instrumentGenerators: parseIgen(chunkList[7], data),\r\n            sampleHeaders: parseShdr(chunkList[8], data),\r\n        };\r\n    }\r\n    const result = parseRiffChunk(chunk, input);\r\n    return Object.assign(Object.assign({}, result), { samples: loadSample(result.sampleHeaders, result.samplingData.offset, input) });\r\n}\r\nfunction getChunkList(chunk, data, expectedType, expectedSignature) {\r\n    // check parse target\r\n    if (chunk.type !== expectedType) {\r\n        throw new Error(\"invalid chunk type:\" + chunk.type);\r\n    }\r\n    const stream = new Stream(data, chunk.offset);\r\n    // check signature\r\n    const signature = stream.readString(4);\r\n    if (signature !== expectedSignature) {\r\n        throw new Error(\"invalid signature:\" + signature);\r\n    }\r\n    // read structure\r\n    return parseRiff(data, stream.ip, chunk.size - 4);\r\n}\r\nfunction parseInfoList(chunk, data) {\r\n    const chunkList = getChunkList(chunk, data, \"LIST\", \"INFO\");\r\n    return Info.parse(data, chunkList);\r\n}\r\nfunction parseSdtaList(chunk, data) {\r\n    const chunkList = getChunkList(chunk, data, \"LIST\", \"sdta\");\r\n    if (chunkList.length !== 1) {\r\n        throw new Error(\"TODO\");\r\n    }\r\n    return chunkList[0];\r\n}\r\nfunction parseChunk(chunk, data, type, clazz, terminate) {\r\n    const result = [];\r\n    if (chunk.type !== type) {\r\n        throw new Error(\"invalid chunk type:\" + chunk.type);\r\n    }\r\n    const stream = new Stream(data, chunk.offset);\r\n    const size = chunk.offset + chunk.size;\r\n    while (stream.ip < size) {\r\n        const obj = clazz.parse(stream);\r\n        if (terminate && terminate(obj)) {\r\n            break;\r\n        }\r\n        result.push(obj);\r\n    }\r\n    return result;\r\n}\r\nconst parsePhdr = (chunk, data) => parseChunk(chunk, data, \"phdr\", PresetHeader, (p) => p.isEnd);\r\nconst parsePbag = (chunk, data) => parseChunk(chunk, data, \"pbag\", PresetBag);\r\nconst parseInst = (chunk, data) => parseChunk(chunk, data, \"inst\", Instrument, (i) => i.isEnd);\r\nconst parseIbag = (chunk, data) => parseChunk(chunk, data, \"ibag\", InstrumentBag);\r\nconst parsePmod = (chunk, data) => parseChunk(chunk, data, \"pmod\", ModulatorList, (m) => m.isEnd);\r\nconst parseImod = (chunk, data) => parseChunk(chunk, data, \"imod\", ModulatorList, (m) => m.isEnd);\r\nconst parsePgen = (chunk, data) => parseChunk(chunk, data, \"pgen\", GeneratorList, (g) => g.isEnd);\r\nconst parseIgen = (chunk, data) => parseChunk(chunk, data, \"igen\", GeneratorList);\r\nconst parseShdr = (chunk, data) => parseChunk(chunk, data, \"shdr\", SampleHeader, (s) => s.isEnd);\r\nfunction adjustSampleData(sample, sampleRate) {\r\n    let multiply = 1;\r\n    // buffer\r\n    while (sampleRate < 22050) {\r\n        const newSample = new Int16Array(sample.length * 2);\r\n        for (let i = 0, j = 0, il = sample.length; i < il; ++i) {\r\n            newSample[j++] = sample[i];\r\n            newSample[j++] = sample[i];\r\n        }\r\n        sample = newSample;\r\n        multiply *= 2;\r\n        sampleRate *= 2;\r\n    }\r\n    return {\r\n        sample,\r\n        multiply,\r\n    };\r\n}\r\nfunction loadSample(sampleHeader, samplingDataOffset, data) {\r\n    return sampleHeader.map((header) => {\r\n        let sample = new Int16Array(new Uint8Array(data.subarray(samplingDataOffset + header.start * 2, samplingDataOffset + header.end * 2)).buffer);\r\n        if (header.sampleRate > 0) {\r\n            const adjust = adjustSampleData(sample, header.sampleRate);\r\n            sample = adjust.sample;\r\n            header.sampleRate *= adjust.multiply;\r\n            header.loopStart *= adjust.multiply;\r\n            header.loopEnd *= adjust.multiply;\r\n        }\r\n        return sample;\r\n    });\r\n}\n\nfunction createGeneraterObject(generators) {\r\n    const result = {};\r\n    for (const gen of generators) {\r\n        const type = gen.type;\r\n        if (type !== undefined) {\r\n            result[type] = gen.value;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nconst defaultInstrumentZone = {\r\n    keynum: undefined,\r\n    instrument: undefined,\r\n    velocity: undefined,\r\n    exclusiveClass: undefined,\r\n    keyRange: new RangeValue(0, 127),\r\n    velRange: new RangeValue(0, 127),\r\n    sampleID: undefined,\r\n    delayVolEnv: -12000,\r\n    attackVolEnv: -12000,\r\n    decayVolEnv: -12000,\r\n    holdVolEnv: -12000,\r\n    sustainVolEnv: 0,\r\n    releaseVolEnv: -12000,\r\n    delayModEnv: -12000,\r\n    attackModEnv: -12000,\r\n    decayModEnv: -12000,\r\n    holdModEnv: -12000,\r\n    sustainModEnv: 0,\r\n    releaseModEnv: -12000,\r\n    modEnvToPitch: 0,\r\n    modEnvToFilterFc: 0,\r\n    modLfoToFilterFc: 0,\r\n    modLfoToPitch: 0,\r\n    modLfoToVolume: 0,\r\n    vibLfoToPitch: 0,\r\n    chorusEffectsSend: 0,\r\n    reverbEffectsSend: 0,\r\n    delayModLFO: 0,\r\n    freqModLFO: 0,\r\n    delayVibLFO: 0,\r\n    keynumToModEnvDecay: 0,\r\n    keynumToModEnvHold: 0,\r\n    keynumToVolEnvDecay: 0,\r\n    keynumToVolEnvHold: 0,\r\n    coarseTune: 0,\r\n    fineTune: 0,\r\n    scaleTuning: 100,\r\n    freqVibLFO: 0,\r\n    startAddrsOffset: 0,\r\n    startAddrsCoarseOffset: 0,\r\n    endAddrsOffset: 0,\r\n    endAddrsCoarseOffset: 0,\r\n    startloopAddrsOffset: 0,\r\n    startloopAddrsCoarseOffset: 0,\r\n    initialAttenuation: 0,\r\n    endloopAddrsOffset: 0,\r\n    endloopAddrsCoarseOffset: 0,\r\n    overridingRootKey: undefined,\r\n    initialFilterQ: 1,\r\n    initialFilterFc: 13500,\r\n    sampleModes: 0,\r\n    pan: undefined,\r\n};\n\nfunction arrayRange(start, end) {\r\n    return Array.from({ length: end - start }, (_, k) => k + start);\r\n}\r\nfunction getInstrumentZone(parsed, instrumentZoneIndex) {\r\n    const instrumentBag = parsed.instrumentZone[instrumentZoneIndex];\r\n    const nextInstrumentBag = parsed.instrumentZone[instrumentZoneIndex + 1];\r\n    const generatorIndex = instrumentBag.instrumentGeneratorIndex;\r\n    const nextGeneratorIndex = nextInstrumentBag\r\n        ? nextInstrumentBag.instrumentGeneratorIndex\r\n        : parsed.instrumentGenerators.length;\r\n    return parsed.instrumentGenerators.slice(generatorIndex, nextGeneratorIndex);\r\n}\r\nfunction getInstrumentZoneIndexes(parsed, instrumentID) {\r\n    const instrument = parsed.instruments[instrumentID];\r\n    const nextInstrument = parsed.instruments[instrumentID + 1];\r\n    return arrayRange(instrument.instrumentBagIndex, nextInstrument\r\n        ? nextInstrument.instrumentBagIndex\r\n        : parsed.instrumentZone.length);\r\n}\r\nfunction getInstrumentGenerators(parsed, instrumentID) {\r\n    return getInstrumentZoneIndexes(parsed, instrumentID).map((i) => getInstrumentZone(parsed, i));\r\n}\n\nfunction getPresetGenerators(parsed, presetHeaderIndex) {\r\n    let presetGenerators;\r\n    const presetHeader = parsed.presetHeaders[presetHeaderIndex];\r\n    const presetBag = parsed.presetZone[presetHeader.presetBagIndex];\r\n    const nextPresetHeaderIndex = presetHeaderIndex + 1;\r\n    if (nextPresetHeaderIndex < parsed.presetHeaders.length) {\r\n        // 次の preset までのすべての generator を取得する\r\n        const nextPresetHeader = parsed.presetHeaders[nextPresetHeaderIndex];\r\n        const nextPresetBag = parsed.presetZone[nextPresetHeader.presetBagIndex];\r\n        presetGenerators = parsed.presetGenerators.slice(presetBag.presetGeneratorIndex, nextPresetBag.presetGeneratorIndex);\r\n    }\r\n    else {\r\n        // 最後の preset だった場合は最後まで取得する\r\n        presetGenerators = parsed.presetGenerators.slice(presetBag.presetGeneratorIndex, parsed.presetGenerators.length);\r\n    }\r\n    return presetGenerators;\r\n}\n\n/**\r\n * Parser で読み込んだサウンドフォントのデータを\r\n * Synthesizer から利用しやすい形にするクラス\r\n */\r\nclass SoundFont {\r\n    constructor(parsed) {\r\n        this.parsed = parsed;\r\n    }\r\n    getPresetZone(presetHeaderIndex) {\r\n        return getPresetGenerators(this.parsed, presetHeaderIndex);\r\n    }\r\n    getInstrumentZone(instrumentZoneIndex) {\r\n        return createGeneraterObject(getInstrumentZone(this.parsed, instrumentZoneIndex));\r\n    }\r\n    getInstrumentZoneIndexes(instrumentID) {\r\n        return getInstrumentZoneIndexes(this.parsed, instrumentID);\r\n    }\r\n    getInstrumentKey(bankNumber, instrumentNumber, key, velocity = 100) {\r\n        const presetHeaderIndex = this.parsed.presetHeaders.findIndex((p) => p.preset === instrumentNumber && p.bank === bankNumber);\r\n        if (presetHeaderIndex < 0) {\r\n            console.warn(\"preset not found: bank=%s instrument=%s\", bankNumber, instrumentNumber);\r\n            return null;\r\n        }\r\n        const presetGenerators = getPresetGenerators(this.parsed, presetHeaderIndex);\r\n        // Last Preset Generator must be instrument\r\n        const lastPresetGenertor = presetGenerators[presetGenerators.length - 1];\r\n        if (lastPresetGenertor.type !== \"instrument\" ||\r\n            isNaN(Number(lastPresetGenertor.value))) {\r\n            throw new Error(\"Invalid SoundFont: invalid preset generator: expect instrument\");\r\n        }\r\n        const instrumentID = lastPresetGenertor.value;\r\n        const instrumentZones = getInstrumentGenerators(this.parsed, instrumentID).map(createGeneraterObject);\r\n        // 最初のゾーンがsampleID を持たなければ global instrument zone\r\n        let globalInstrumentZone;\r\n        const firstInstrumentZone = instrumentZones[0];\r\n        if (firstInstrumentZone.sampleID === undefined) {\r\n            globalInstrumentZone = instrumentZones[0];\r\n        }\r\n        // keyRange と velRange がマッチしている Generator を探す\r\n        const instrumentZone = instrumentZones.find((i) => {\r\n            if (i === globalInstrumentZone) {\r\n                return false; // global zone を除外\r\n            }\r\n            let isInKeyRange = false;\r\n            if (i.keyRange) {\r\n                isInKeyRange = key >= i.keyRange.lo && key <= i.keyRange.hi;\r\n            }\r\n            let isInVelRange = true;\r\n            if (i.velRange) {\r\n                isInVelRange = velocity >= i.velRange.lo && velocity <= i.velRange.hi;\r\n            }\r\n            return isInKeyRange && isInVelRange;\r\n        });\r\n        if (!instrumentZone) {\r\n            console.warn(\"instrument not found: bank=%s instrument=%s\", bankNumber, instrumentNumber);\r\n            return null;\r\n        }\r\n        if (instrumentZone.sampleID === undefined) {\r\n            throw new Error(\"Invalid SoundFont: sampleID not found\");\r\n        }\r\n        const gen = Object.assign(Object.assign(Object.assign({}, defaultInstrumentZone), removeUndefined(globalInstrumentZone || {})), removeUndefined(instrumentZone));\r\n        const sample = this.parsed.samples[gen.sampleID];\r\n        const sampleHeader = this.parsed.sampleHeaders[gen.sampleID];\r\n        const tune = gen.coarseTune + gen.fineTune / 100;\r\n        const basePitch = tune +\r\n            sampleHeader.pitchCorrection / 100 -\r\n            (gen.overridingRootKey || sampleHeader.originalPitch);\r\n        const scaleTuning = gen.scaleTuning / 100;\r\n        return {\r\n            sample,\r\n            sampleRate: sampleHeader.sampleRate,\r\n            sampleName: sampleHeader.sampleName,\r\n            sampleModes: gen.sampleModes,\r\n            playbackRate: (key) => Math.pow(Math.pow(2, 1 / 12), (key + basePitch) * scaleTuning),\r\n            modEnvToPitch: gen.modEnvToPitch / 100,\r\n            scaleTuning,\r\n            start: gen.startAddrsCoarseOffset * 32768 + gen.startAddrsOffset,\r\n            end: gen.endAddrsCoarseOffset * 32768 + gen.endAddrsOffset,\r\n            loopStart: sampleHeader.loopStart +\r\n                gen.startloopAddrsCoarseOffset * 32768 +\r\n                gen.startloopAddrsOffset,\r\n            loopEnd: sampleHeader.loopEnd +\r\n                gen.endloopAddrsCoarseOffset * 32768 +\r\n                gen.endloopAddrsOffset,\r\n            volDelay: convertTime(gen.delayVolEnv),\r\n            volAttack: convertTime(gen.attackVolEnv),\r\n            volHold: convertTime(gen.holdVolEnv),\r\n            volDecay: convertTime(gen.decayVolEnv),\r\n            volSustain: gen.sustainVolEnv / 1000,\r\n            volRelease: convertTime(gen.releaseVolEnv),\r\n            modDelay: convertTime(gen.delayModEnv),\r\n            modAttack: convertTime(gen.attackModEnv),\r\n            modHold: convertTime(gen.holdModEnv),\r\n            modDecay: convertTime(gen.decayModEnv),\r\n            modSustain: gen.sustainModEnv / 1000,\r\n            modRelease: convertTime(gen.releaseModEnv),\r\n            keyRange: gen.keyRange,\r\n            velRange: gen.velRange,\r\n            initialFilterFc: gen.initialFilterFc,\r\n            modEnvToFilterFc: gen.modEnvToFilterFc,\r\n            initialFilterQ: gen.initialFilterQ,\r\n            initialAttenuation: gen.initialAttenuation,\r\n            freqVibLFO: gen.freqVibLFO\r\n                ? convertTime(gen.freqVibLFO) * 8.176\r\n                : undefined,\r\n            pan: gen.pan,\r\n        };\r\n    }\r\n    // presetNames[bankNumber][presetNumber] = presetName\r\n    getPresetNames() {\r\n        const bank = {};\r\n        this.parsed.presetHeaders.forEach((preset) => {\r\n            if (!bank[preset.bank]) {\r\n                bank[preset.bank] = {};\r\n            }\r\n            bank[preset.bank][preset.preset] = preset.presetName;\r\n        });\r\n        return bank;\r\n    }\r\n}\r\n// value = 1200log2(sec) で表される時間を秒単位に変換する\r\nfunction convertTime(value) {\r\n    return Math.pow(2, value / 1200);\r\n}\r\nfunction removeUndefined(obj) {\r\n    const result = {};\r\n    for (let key in obj) {\r\n        if (obj[key] !== undefined) {\r\n            result[key] = obj[key];\r\n        }\r\n    }\r\n    return result;\r\n}\n\nexports.SoundFont = SoundFont;\nexports.convertTime = convertTime;\nexports.createGeneraterObject = createGeneraterObject;\nexports.defaultInstrumentZone = defaultInstrumentZone;\nexports.getInstrumentGenerators = getInstrumentGenerators;\nexports.getInstrumentZone = getInstrumentZone;\nexports.getInstrumentZoneIndexes = getInstrumentZoneIndexes;\nexports.getPresetGenerators = getPresetGenerators;\nexports.parse = parse;\n//# sourceMappingURL=index.js.map\n","import { LoadSampleEvent, SoundFontSample } from \"..\"\n\nexport const sampleToSynthEvent = (\n  sample: SoundFontSample\n): LoadSampleEvent => ({\n  type: \"loadSample\",\n  sample,\n  bank: sample.bank,\n  instrument: sample.instrument,\n  keyRange: sample.keyRange,\n  velRange: sample.velRange,\n})\n","import {\n  createGeneraterObject,\n  defaultInstrumentZone,\n  GeneratorParams,\n  getInstrumentGenerators,\n  getPresetGenerators,\n  parse,\n} from \"@ryohey/sf2parser\"\nimport { SampleData } from \"../SynthEvent\"\nimport { sampleToSynthEvent } from \"./sampleToSynthEvent\"\n\nexport type SoundFontSample = SampleData<ArrayBuffer> & {\n  bank: number\n  instrument: number\n  keyRange: [number, number]\n  velRange: [number, number]\n}\n\nexport interface BufferCreator {\n  createBuffer(\n    numberOfChannels: number,\n    length: number,\n    sampleRate: number\n  ): AudioBuffer\n}\n\nexport const getSamplesFromSoundFont = (\n  data: Uint8Array,\n  ctx: BufferCreator\n) => {\n  const parsed = parse(data)\n  const result: SoundFontSample[] = []\n\n  for (let i = 0; i < parsed.presetHeaders.length; i++) {\n    const presetHeader = parsed.presetHeaders[i]\n    const presetGenerators = getPresetGenerators(parsed, i)\n\n    for (const lastPresetGenertor of presetGenerators.filter(\n      (gen) => gen.type === \"instrument\"\n    )) {\n      const presetZone = createGeneraterObject(presetGenerators)\n\n      const instrumentID = lastPresetGenertor.value as number\n      const instrumentZones = getInstrumentGenerators(parsed, instrumentID).map(\n        createGeneraterObject\n      )\n\n      // 最初のゾーンがsampleID を持たなければ global instrument zone\n      let globalInstrumentZone: any | undefined\n      const firstInstrumentZone = instrumentZones[0]\n      if (firstInstrumentZone.sampleID === undefined) {\n        globalInstrumentZone = instrumentZones[0]\n      }\n\n      for (const zone of instrumentZones.filter(\n        (zone) => zone.sampleID !== undefined\n      )) {\n        const sample = parsed.samples[zone.sampleID!]\n        const sampleHeader = parsed.sampleHeaders[zone.sampleID!]\n\n        const gen = {\n          ...defaultInstrumentZone,\n          ...removeUndefined(globalInstrumentZone ?? {}),\n          ...removeUndefined(zone),\n        }\n\n        // add presetGenerator value\n        for (const key of Object.keys(gen) as (keyof GeneratorParams)[]) {\n          if (\n            key in presetZone &&\n            typeof gen[key] === \"number\" &&\n            typeof presetZone[key] === \"number\"\n          ) {\n            gen[key] += presetZone[key]\n          }\n        }\n\n        const tune = gen.coarseTune + gen.fineTune / 100\n\n        const basePitch =\n          tune +\n          sampleHeader.pitchCorrection / 100 -\n          (gen.overridingRootKey ?? sampleHeader.originalPitch)\n\n        const sampleStart =\n          gen.startAddrsCoarseOffset * 32768 + gen.startAddrsOffset\n\n        const sampleEnd = gen.endAddrsCoarseOffset * 32768 + gen.endAddrsOffset\n\n        const loopStart =\n          sampleHeader.loopStart +\n          gen.startloopAddrsCoarseOffset * 32768 +\n          gen.startloopAddrsOffset\n\n        const loopEnd =\n          sampleHeader.loopEnd +\n          gen.endloopAddrsCoarseOffset * 32768 +\n          gen.endloopAddrsOffset\n\n        const sample2 = sample.subarray(0, sample.length + sampleEnd)\n\n        const audioBuffer = ctx.createBuffer(\n          1,\n          sample2.length,\n          sampleHeader.sampleRate\n        )\n        const audioData = audioBuffer.getChannelData(0)\n        sample2.forEach((v, i) => {\n          audioData[i] = v / 32767\n        })\n\n        const amplitudeEnvelope = {\n          attackTime: timeCentToSec(gen.attackVolEnv),\n          decayTime: timeCentToSec(gen.decayVolEnv) / 4,\n          sustainLevel: 1 - gen.sustainVolEnv / 1000,\n          releaseTime: timeCentToSec(gen.releaseVolEnv) / 4,\n        }\n\n        result.push({\n          buffer: audioData.buffer,\n          pitch: -basePitch,\n          name: sampleHeader.sampleName,\n          sampleStart,\n          sampleEnd: sampleEnd === 0 ? audioData.length : sampleEnd,\n          loop:\n            gen.sampleModes === 1 && loopEnd > 0\n              ? {\n                  start: loopStart,\n                  end: loopEnd,\n                }\n              : null,\n          instrument: presetHeader.preset,\n          bank: presetHeader.bank,\n          keyRange: [gen.keyRange.lo, gen.keyRange.hi],\n          velRange: [gen.velRange.lo, gen.velRange.hi],\n          sampleRate: sampleHeader.sampleRate,\n          amplitudeEnvelope,\n          scaleTuning: gen.scaleTuning / 100,\n          pan: (gen.pan ?? 0) / 500,\n          exclusiveClass: gen.exclusiveClass,\n          volume: 1 - gen.initialAttenuation / 1000,\n        })\n      }\n    }\n  }\n\n  return result.map(sampleToSynthEvent)\n}\n\nfunction convertTime(value: number) {\n  return Math.pow(2, value / 1200)\n}\n\nfunction timeCentToSec(value: number) {\n  if (value <= -32768) {\n    return 0\n  }\n\n  if (value < -12000) {\n    value = -12000\n  }\n\n  if (value > 8000) {\n    value = 8000\n  }\n\n  return convertTime(value)\n}\n\nfunction removeUndefined<T>(obj: T) {\n  const result: Partial<T> = {}\n  for (let key in obj) {\n    if (obj[key] !== undefined) {\n      result[key] = obj[key]\n    }\n  }\n  return result\n}\n","import { AnyChannelEvent } from \"midifile-ts\"\nimport { AmplitudeEnvelopeParameter } from \"./processor/AmplitudeEnvelope\"\nimport { DistributiveOmit } from \"./types\"\n\nexport interface SampleLoop {\n  start: number\n  end: number\n}\n\nexport interface SampleData<BufferType> {\n  name: string\n  buffer: BufferType\n  pitch: number\n  loop: SampleLoop | null\n  sampleStart: number\n  sampleEnd: number\n  sampleRate: number\n  amplitudeEnvelope: AmplitudeEnvelopeParameter\n  // This parameter represents the degree to which MIDI key number influences pitch.\n  // A value of zero indicates that MIDI key number has no effect on pitch\n  // a value of 1 represents the usual tempered semitone scale.\n  scaleTuning: number\n  pan: number\n  exclusiveClass?: number | undefined\n  volume: number // 0 to 1\n}\n\nexport interface LoadSampleEvent {\n  type: \"loadSample\"\n  sample: SampleData<ArrayBuffer>\n  bank: number\n  instrument: number // GM Patch Number\n  keyRange: [number, number]\n  velRange: [number, number]\n}\n\nexport type MIDIEventBody = DistributiveOmit<AnyChannelEvent, \"deltaTime\">\n\nexport type MIDIEvent = {\n  type: \"midi\"\n  midi: MIDIEventBody\n  // Time to delay the playback of an event. Number of frames\n  // delayInSeconds = delayTime / sampleRate\n  delayTime: number\n}\n\nexport type ImmediateEvent = LoadSampleEvent\nexport type SynthEvent = ImmediateEvent | MIDIEvent\n\nexport const DrumInstrumentNumber = 128\n"],"names":["removeUndefined","convertTime","parse","getPresetGenerators","createGeneraterObject","getInstrumentGenerators","defaultInstrumentZone"],"mappings":"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"}